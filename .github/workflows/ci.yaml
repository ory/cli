name: CI Tasks for Ory CLI
on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'

  docs:
    name: Generate docs
    runs-on: ubuntu-latest
    if: ${{ github.event.push.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - run: |
          mkdir -p docs/docs
          make docs/cli
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          echo 'docsdir='"$(mktemp -d)" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          path: ${{ env.docsdir }}
      - run: |
          cd "$docsdir"
          git add -A
          git commit -a -m "autogen(docs): regenerate ory/cli reference" --allow-empty
          git pull -ff
          git push

  release:
    name: Generate release
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    needs:
      - test
    steps:
      - uses: ory/ci/releaser@v1
        with:
          token: ${{ secrets.PAT }}
          goreleaser_key: ${{ secrets.GORELEASER_KEY }}

  npm-publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    needs:
      - release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: |
          npm install
          npm run test:binwrap
          npm version --no-git-tag-version ${{ github.ref_name }}
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          npm publish --access public

  newsletter-draft:
    name: Draft newsletter
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    needs:
      - release
    steps:
      - uses: ory/ci/newsletter@v1
        with:
          mailchimp_list_id: 058a056618
          mailchmip_segment_id: 11398953
          mailchimp_api_key: ${{ secrets.MAILCHIMP_API_KEY }}
          draft: 'true'

  slack-approval-notification:
    name: Pending approval Slack notification
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    needs:
      - newsletter-draft
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
    steps:
      - uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: "{\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"Pending approval\"}}]}"

  newsletter-send:
    name: Send newsletter
    runs-on: ubuntu-latest
    needs: 
      - newsletter-draft
    if: ${{ github.ref_type == 'tag' }}
    environment: production
    steps:
      - uses: ory/ci/newsletter@v1
        with:
          mailchimp_list_id: 058a056618
          mailchmip_segment_id: 11398953
          mailchimp_api_key: ${{ secrets.MAILCHIMP_API_KEY }}
          draft: 'true'


